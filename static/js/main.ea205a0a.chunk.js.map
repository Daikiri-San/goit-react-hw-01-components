{"version":3,"sources":["components/Stats/Stats.js","components/Description/Description.js","components/Profile/Profile.js","components/Statistics/Statistics.js","components/FriendListItem/FriendListItem.js","components/FriendList/FriendList.js","components/TransactionHistory/TransactionHistory.js","components/App.js","index.js"],"names":["List","styled","ul","ListText","span","ListStats","ListItem","li","Stats","stats","followers","views","likes","regexFix","toString","replace","Avatar","img","DescriptionBlock","div","Name","p","Tag","Location","Description","name","tag","location","avatar","src","alt","defaultProps","ProfileBlock","Profile","user","randomHexColor","hexColor","Math","floor","random","length","StatisticsBlock","section","Title","title","props","color","Statistics","toUpperCase","map","id","label","percentage","key","Status","isOnline","FriendListItem","width","FriendList","friends","Table","table","THeadTH","th","TBodyTR","tr","TBOdyTD","td","TransactionHistory","items","type","amount","currency","App","statisticalData","transactions","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.ea205a0a.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst List = styled.ul`\r\n  width: 100%;\r\n  display: flex;\r\n`;\r\n\r\nconst ListText = styled.span`\r\n  font-size: 1.3rem;\r\n  color: rgba(0, 0, 0, 0.5);\r\n  margin-bottom: 0.4rem;\r\n`;\r\n\r\nconst ListStats = styled.span`\r\n  font-size: 1.6rem;\r\n  font-family: var(--secondary-font);\r\n`;\r\n\r\nconst ListItem = styled.li`\r\n  width: 33.3%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 2rem 0rem;\r\n  border-right: 1px solid rgba(0, 0, 0, 0.1);\r\n  border-top: 1px solid rgba(0, 0, 0, 0.1);\r\n  background-color: #ebedf0;\r\n\r\n  &:last-of-type {\r\n    border-right: none;\r\n    border-bottom-right-radius: 0.4rem;\r\n  }\r\n\r\n  &:first-of-type {\r\n    border-bottom-left-radius: 0.4rem;\r\n  }\r\n`;\r\n\r\nfunction Stats({ stats }) {\r\n  const { followers, views, likes } = stats;\r\n  const regexFix = /\\d{1,3}(?=(\\d{3})+(?!\\d))/g;\r\n  return (\r\n    <List>\r\n      <ListItem>\r\n        <ListText>Followers</ListText>\r\n        <ListStats>{followers.toString().replace(regexFix, '$&,')}</ListStats>\r\n      </ListItem>\r\n      <ListItem>\r\n        <ListText>Views</ListText>\r\n        <ListStats>{views.toString().replace(regexFix, '$&,')}</ListStats>\r\n      </ListItem>\r\n      <ListItem>\r\n        <ListText>Likes</ListText>\r\n        <ListStats>{likes.toString().replace(regexFix, '$&,')}</ListStats>\r\n      </ListItem>\r\n    </List>\r\n  );\r\n}\r\n\r\nStats.propTypes = {\r\n  stats: PropTypes.exact({\r\n    followers: PropTypes.number.isRequired,\r\n    views: PropTypes.number.isRequired,\r\n    likes: PropTypes.number.isRequired,\r\n  }),\r\n};\r\nexport default Stats;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst Avatar = styled.img`\r\n  width: 12rem;\r\n  border-radius: 50%;\r\n  margin: 0 auto;\r\n  margin-bottom: 3rem;\r\n`;\r\n\r\nconst DescriptionBlock = styled.div`\r\n  text-align: center;\r\n  padding: 4rem 4rem 0rem 4rem;\r\n`;\r\n\r\nconst Name = styled.p`\r\n  font-size: 2rem;\r\n  font-family: var(--secondary-font);\r\n  margin-bottom: 0.6rem;\r\n`;\r\n\r\nconst Tag = styled.p`\r\n  font-size: 1.4rem;\r\n  color: rgba(0, 0, 0, 0.5);\r\n  margin-bottom: 0.8rem;\r\n`;\r\n\r\nconst Location = styled.p`\r\n  font-size: 1.4rem;\r\n  color: rgba(0, 0, 0, 0.5);\r\n  margin-bottom: 4rem;\r\n`;\r\n\r\nfunction Description({ name, tag, location, avatar }) {\r\n  return (\r\n    <DescriptionBlock>\r\n      <Avatar src={avatar} alt=\"user avatar\" />\r\n      <Name>{name}</Name>\r\n      <Tag>@{tag}</Tag>\r\n      {location && <Location>{location}</Location>}\r\n    </DescriptionBlock>\r\n  );\r\n}\r\n\r\nDescription.defaultProps = {\r\n  name: 'Anonymous',\r\n  avatar: 'https://worldcup.com.ua/wp-content/uploads/2017/09/no-avatar-8.png',\r\n  location: '',\r\n};\r\n\r\nDescription.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  tag: PropTypes.string.isRequired,\r\n  location: PropTypes.string,\r\n  avatar: PropTypes.string,\r\n};\r\n\r\nexport default Description;\r\n","import React from 'react';\r\nimport Stats from '../Stats';\r\nimport Description from '../Description';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst ProfileBlock = styled.div`\r\n  max-width: 30rem;\r\n  margin: 0 auto;\r\n  margin-top: 4rem;\r\n  box-shadow: 0px 0px 4px 0px rgba(0, 0, 0, 0.75);\r\n  background-color: snow;\r\n  border-radius: 0.4rem;\r\n  margin-bottom: 10rem;\r\n`;\r\n\r\nfunction Profile({ user }) {\r\n  const { name, tag, location, avatar, stats } = user;\r\n\r\n  return (\r\n    <ProfileBlock>\r\n      <Description name={name} tag={tag} location={location} avatar={avatar} />\r\n      <Stats stats={stats} />\r\n    </ProfileBlock>\r\n  );\r\n}\r\n\r\nProfile.propTypes = {\r\n  user: PropTypes.exact({\r\n    name: PropTypes.string.isRequired,\r\n    tag: PropTypes.string.isRequired,\r\n    location: PropTypes.string,\r\n    avatar: PropTypes.string,\r\n    stats: PropTypes.object.isRequired,\r\n  }),\r\n};\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nfunction randomHexColor() {\r\n  const hexColor = Math.floor(Math.random() * 16777215).toString(16);\r\n  const result = hexColor.length === 5 ? `#0${hexColor}` : `#${hexColor}`;\r\n  return result;\r\n}\r\n\r\nconst StatisticsBlock = styled.section`\r\n  display: inline-block;\r\n  margin-left: 50%;\r\n  transform: translateX(-50%);\r\n  text-align: center;\r\n  background-color: snow;\r\n  border-bottom-right-radius: 0.4rem;\r\n  border-bottom-left-radius: 0.4rem;\r\n  margin-bottom: 10rem;\r\n`;\r\n\r\nconst Title = styled.title`\r\n  display: inline-block;\r\n  background-color: snow;\r\n  font-size: 2.2rem;\r\n  font-family: var(--secondary-font);\r\n  padding: 2.2rem;\r\n  color: rgba(0, 0, 0, 0.7);\r\n`;\r\n\r\nconst List = styled.ul`\r\n  min-width: 21rem;\r\n  max-width: 56rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst ListItem = styled.li`\r\n  width: 7rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 1rem 2rem;\r\n  background-color: ${props => props.color};\r\n\r\n  &:last-of-type {\r\n    border-bottom-right-radius: 0.4rem;\r\n  }\r\n\r\n  &:first-of-type {\r\n    border-bottom-left-radius: 0.4rem;\r\n  }\r\n`;\r\n\r\nconst ListText = styled.span`\r\n  font-size: 1.2rem;\r\n  margin-bottom: 0.4rem;\r\n  color: snow;\r\n`;\r\n\r\nconst ListStats = styled.span`\r\n  font-size: 1.6rem;\r\n  color: snow;\r\n`;\r\n\r\nfunction Statistics({ title, stats }) {\r\n  return (\r\n    <StatisticsBlock>\r\n      {title && <Title>{title.toUpperCase()}</Title>}\r\n\r\n      <List>\r\n        {stats.map(({ id, label, percentage }) => (\r\n          <ListItem key={id} color={randomHexColor()}>\r\n            <ListText>{label}</ListText>\r\n            <ListStats>{percentage}%</ListStats>\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </StatisticsBlock>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  title: PropTypes.string,\r\n  statisticalData: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      id: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      persentage: PropTypes.number.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst ListItem = styled.li`\r\n  min-width: 20rem;\r\n  max-width: 40rem;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  padding: 1rem 1.4rem;\r\n  background-color: snow;\r\n  box-shadow: 0px 3px 5px 0px rgba(0, 0, 0, 0.75);\r\n  margin-bottom: 1rem;\r\n`;\r\n\r\nconst Status = styled.span`\r\n  display: inline-block;\r\n  width: 2.4rem;\r\n  height: 2.4rem;\r\n  border-radius: 50%;\r\n  background-color: ${props => (props.isOnline ? '#19e320' : '#fc2b2b')};\r\n`;\r\n\r\nconst Avatar = styled.img`\r\n  margin-left: 1.4rem;\r\n  border-radius: 0.6rem;\r\n  width: 10rem;\r\n`;\r\n\r\nconst Name = styled.p`\r\n  font-family: var(--secondary-font);\r\n  margin-left: 1.4rem;\r\n  font-size: 3rem;\r\n`;\r\n\r\nfunction FriendListItem({ avatar, name, isOnline }) {\r\n  return (\r\n    <ListItem>\r\n      <Status isOnline={isOnline}></Status>\r\n      <Avatar src={avatar} alt=\"user Avatar\" width=\"48\" />\r\n      <Name>{name}</Name>\r\n    </ListItem>\r\n  );\r\n}\r\n\r\nFriendListItem.defaultProps = {\r\n  avatar: 'https://worldcup.com.ua/wp-content/uploads/2017/09/no-avatar-8.png',\r\n  name: 'Anonymous',\r\n};\r\n\r\nFriendListItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  avatar: PropTypes.string,\r\n  isOnline: PropTypes.bool,\r\n};\r\n\r\nexport default FriendListItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport FriendListItem from '../FriendListItem';\r\nimport styled from 'styled-components';\r\n\r\nconst List = styled.ul`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-left: 3rem;\r\n  margin-bottom: 10rem;\r\n`;\r\n\r\nfunction FriendList({ friends }) {\r\n  return (\r\n    <List>\r\n      {friends.map(({ id, avatar, name, isOnline }) => (\r\n        <FriendListItem\r\n          key={id}\r\n          avatar={avatar}\r\n          isOnline={isOnline}\r\n          name={name}\r\n        />\r\n      ))}\r\n    </List>\r\n  );\r\n}\r\n\r\nFriendList.propTypes = {\r\n  friends: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      id: PropTypes.number.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      avatar: PropTypes.string,\r\n      isOnline: PropTypes.bool,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default FriendList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst Table = styled.table`\r\n  border-collapse: collapse;\r\n  min-width: 70%;\r\n  margin: 0 auto;\r\n  margin-bottom: 10rem;\r\n  border-top-left-radius: 0.6rem;\r\n  border-top-right-radius: 0.6rem;\r\n  box-shadow: 0px 0px 10px 1px rgba(0, 0, 0, 0.75);\r\n`;\r\n\r\nconst THeadTH = styled.th`\r\n  width: 33.3%;\r\n  text-align: center;\r\n  text-transform: uppercase;\r\n  letter-spacing: 0.2rem;\r\n  font-size: 1.8rem;\r\n  font-family: var(--secondary-font);\r\n  color: snow;\r\n  background-color: #13c9ed;\r\n  border-right: 0.1rem solid snow;\r\n  padding: 1.8rem;\r\n\r\n  &:first-of-type {\r\n    border-top-left-radius: 0.6rem;\r\n  }\r\n\r\n  &:last-of-type {\r\n    border-top-right-radius: 0.6rem;\r\n    border-right: none;\r\n  }\r\n`;\r\n\r\nconst TBodyTR = styled.tr`\r\n  background-color: snow;\r\n\r\n  &:last-of-type {\r\n    border-bottom-right-radius: 0.6rem;\r\n    border-bottom-left-radius: 0.6rem;\r\n  }\r\n\r\n  &:nth-of-type(even) {\r\n    background-color: #e1e7e8;\r\n  }\r\n`;\r\n\r\nconst TBOdyTD = styled.td`\r\n  text-transform: capitalize;\r\n  font-size: 1.6rem;\r\n  color: rgba(0, 0, 0, 0.6);\r\n  width: 33.3%;\r\n  text-align: center;\r\n  border: 0.1rem solid #d0d8d9;\r\n  padding: 2rem;\r\n`;\r\n\r\nfunction TransactionHistory({ items }) {\r\n  return (\r\n    <Table>\r\n      <thead>\r\n        <tr>\r\n          <THeadTH>Type</THeadTH>\r\n          <THeadTH>Amount</THeadTH>\r\n          <THeadTH>Currency</THeadTH>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n        {items.map(({ id, type, amount, currency }) => (\r\n          <TBodyTR key={id}>\r\n            <TBOdyTD>{type}</TBOdyTD>\r\n            <TBOdyTD>{amount}</TBOdyTD>\r\n            <TBOdyTD>{currency}</TBOdyTD>\r\n          </TBodyTR>\r\n        ))}\r\n      </tbody>\r\n    </Table>\r\n  );\r\n}\r\n\r\nTransactionHistory.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      id: PropTypes.string.isRequired,\r\n      type: PropTypes.string.isRequired,\r\n      amount: PropTypes.string.isRequired,\r\n      currency: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default TransactionHistory;\r\n","import React from 'react';\nimport Profile from './Profile';\nimport Statistics from './Statistics';\nimport FriendsList from './FriendList';\nimport TransactionHistory from './TransactionHistory';\nimport user from '../user.json';\nimport statisticalData from '../statistical-data.json';\nimport friends from '../friends.json';\nimport transactions from '../transactions.json';\nimport '../css/fonts.css';\nimport '../css/base.css';\n\nfunction App() {\n  return (\n    <>\n      <Profile user={user} />\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\n      <FriendsList friends={friends} />\n      <TransactionHistory items={transactions} />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}